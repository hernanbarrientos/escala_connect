import streamlit as st
from database import (
    add_servico_fixo, view_all_servicos_fixos, update_servico_fixo, delete_servico_fixo,
    view_all_funcoes, get_cotas_for_servico, update_cotas_servico, get_all_ministerios
)
import style

# --- NOVO: Verifica√ß√£o de Login no topo da p√°gina ---
if not st.session_state.get('logged_in'):
    st.error("Acesso negado. Por favor, fa√ßa o login primeiro.")
    st.stop()

style.apply_style()

st.set_page_config(page_title="Gerenciar Servi√ßos", layout="wide")

# --- NOVO: Pega dados do usu√°rio logado ---
id_ministerio_logado = st.session_state['id_ministerio_logado']
todos_ministerios_df = get_all_ministerios()
nome_ministerio = todos_ministerios_df[todos_ministerios_df['id_ministerio'] == id_ministerio_logado]['nome_ministerio'].iloc[0]

st.title(f"Servi√ßos e Cotas do Minist√©rio {nome_ministerio}")

# Dicion√°rio para mapear o nome do dia da semana para o n√∫mero
dias_semana_map = {
    "Domingo": 0, "Segunda-feira": 1, "Ter√ßa-feira": 2, 
    "Quarta-feira": 3, "Quinta-feira": 4, "Sexta-feira": 5, "S√°bado": 6
}
dias_semana_inv_map = {v: k for k, v in dias_semana_map.items()}

# Formul√°rio para adicionar novo servi√ßo
with st.form("novo_servico_form", clear_on_submit=True):
    st.subheader("Adicionar Novo Servi√ßo Fixo")
    nome_servico = st.text_input("Nome do Servi√ßo*", placeholder="Ex: Culto de Domingo - Manh√£")
    dia_semana_nome = st.selectbox("Dia da Semana*", options=list(dias_semana_map.keys()))
    
    submitted = st.form_submit_button("Adicionar Servi√ßo")
    if submitted:
        if nome_servico:
            dia_semana_num = dias_semana_map[dia_semana_nome]
            # << ALTERADO: Passa o id_ministerio_logado para a fun√ß√£o
            add_servico_fixo(nome_servico, dia_semana_num, id_ministerio_logado)
            st.rerun() 
        else:
            st.warning("O nome do servi√ßo √© obrigat√≥rio.")

st.divider()

# Se√ß√£o para visualizar e editar servi√ßos e cotas
st.header("Servi√ßos Cadastrados")

# << ALTERADO: Busca servi√ßos e fun√ß√µes filtrando pelo minist√©rio logado
df_servicos = view_all_servicos_fixos(id_ministerio_logado)
df_funcoes = view_all_funcoes(id_ministerio_logado)

if df_servicos.empty:
    st.info("Nenhum servi√ßo fixo cadastrado para este minist√©rio.")
else:
    for _, servico in df_servicos.iterrows():
        # Expander para cada servi√ßo
        expander_title = f"{servico['nome_servico']} ({dias_semana_inv_map.get(servico['dia_da_semana'], 'Dia Inv√°lido')})"
        with st.expander(expander_title):
            
            with st.form(f"form_edit_servico_{servico['id_servico']}"):
                st.subheader("Editar Dados do Servi√ßo")
                
                edit_nome = st.text_input("Nome do Servi√ßo", value=servico['nome_servico'])
                dia_atual_nome = dias_semana_inv_map.get(servico['dia_da_semana'])
                edit_dia_nome = st.selectbox(
                    "Dia da Semana", 
                    options=list(dias_semana_map.keys()), 
                    index=list(dias_semana_map.keys()).index(dia_atual_nome)
                )
                edit_ativo = st.checkbox("Servi√ßo Ativo", value=servico['ativo'])
                
                st.divider()
                st.subheader("Cotas de Fun√ß√µes (Quantas pessoas s√£o necess√°rias)")
                
                # Busca as cotas atuais para este servi√ßo
                cotas_atuais = get_cotas_for_servico(servico['id_servico'])
                cotas_para_salvar = {}

                # Cria um campo num√©rico para cada fun√ß√£o existente no minist√©rio
                for _, funcao in df_funcoes.iterrows():
                    quantidade_atual = cotas_atuais.get(funcao['id_funcao'], 0)
                    cotas_para_salvar[funcao['id_funcao']] = st.number_input(
                        f"N¬∫ de vagas para '{funcao['nome_funcao']}'", 
                        min_value=0, 
                        max_value=20, 
                        value=quantidade_atual, 
                        key=f"cota_{servico['id_servico']}_{funcao['id_funcao']}"
                    )

                # Bot√µes de a√ß√£o
                col1, col2, col3 = st.columns([2, 2, 8])
                with col1:
                    if st.form_submit_button("Salvar Todas as Altera√ß√µes"):
                        dia_edit_num = dias_semana_map[edit_dia_nome]
                        # Atualiza os dados do servi√ßo E as cotas
                        update_servico_fixo(servico['id_servico'], edit_nome, dia_edit_num, edit_ativo)
                        update_cotas_servico(servico['id_servico'], cotas_para_salvar)
                        st.rerun() 
                with col2:
                    if st.form_submit_button("üóëÔ∏è Excluir Servi√ßo"):
                        delete_servico_fixo(servico['id_servico'])
                        st.rerun()